{
  "title": "폼 디자이너",
  "type": "Document",
  "content":   {
    "FormDesignerManagerGuide": {
      "Introduction": {
        "Description": "웹의 데이터 입출력을 위해 Html 언어 기반으로 화면을 제공하며, 입력된 Form 데이터는 서버와 통신하여 출력을 합니다. 솔루션에서는 사용 목적에 맞는 UI를 사용자가 언어에 구애받지 않고 손쉽게 구성할 수 있으며, 내장된 css를 통하여 UI/UX 고민없이 양식을 만들 수 있습니다."
      },
      "FormDesignerAdvantages": {
        "Description": "기본적인 템플릿을 제공하므로 선택지의 어려움 없이 폼디자이너를 시작할 수 있습니다. 솔루션에서 생성한 물리적인 필드 기준으로 드래그 앤 드랍 만으로 손쉽게 UI를 구성할 수 있으며, 폼의 다양한 옵션 기능들을 설정만으로 사용 가능합니다. 폼에 해당되는 스크립트 영역도 원하는 로직을 작성하여 설정할 수 있습니다."
      },
      "FormDesignerAttributes": {
        "EntityField": "엔터티 관리를 통해 생성된 항목 리스트이며, 해당 필드를 드래그하여 Design 영역으로 드랍합니다.",
        "Outline": "Design 영역의 계층 관계를 보여줍니다.",
        "Design": "UI를 생성할 수 있습니다.",
        "Attributes": "폼의 기본 정보를 확인 및 설정할 수 있습니다.",
        "Selection": "폼영역의 우측 탭 UI로 표기됩니다. SYSTEM: 마스터 테이블의 물리적인 항목 리스트, Custom: 커스텀 테이블의 물리적인 항목 리스트"
      },
      "FormProperties": {
        "ID": "폼의 고유 아이디입니다.",
        "Entity": "폼과 연결된 엔터티 아이디입니다.",
        "Task": "폼과 연결된 타스크 아이디입니다.",
        "Name": "폼 이름입니다.",
        "Label": "페이지 상단에 표기되는 폼의 타이틀입니다.",
        "Tag": "분류코드(#{prefix}_cat_cd)로 폼을 매핑할 수 있습니다.",
        "Columns": "폼의 가로에 표기될 Group 수입니다. 템블릿의 기본은 컬럼수 1입니다.",
        "Script": "해당 폼 전역의 스크립트를 정의할 수 있습니다. 버튼, 필드, 기본값 제어와 같이 자바스크립트 또는 제이쿼리 문법을 통해 작성이 가능하며, ajax를 통해 서버의 데이터를 가져올 수 있도록 작성이 가능합니다.",
        "Intro": "기능 안됨",
        "Config": "릴레이션 관계 설정이 가능하며, 워크플로우 유형이 아닐 경우에 한하여 외부 호출, 버튼을 JSON 구조로 작성하여 사용할 수 있습니다.",
        "KeySetting": "연결 키를 정의할 수 있습니다. 참고로, 등록 폼에서 필수로 체크를 해야하며, 폼이 로딩될 때 시퀀스가 증가합니다.",
        "Help": "폼 우측 탭을 통해 폼 화면의 가이드를 정의할 수 있습니다. Help 관리를 통해 관리를 할 수 있습니다.",
        "HistoryMap": "티켓에 따른 흐름을 확인할 수 있습니다.",
        "ApprovalHistory": "티켓에 연관된 결재 이력을 확인할 수 있습니다.",
        "TransferHistory": "티켓의 담당자 이관 이력을 확인할 수 있습니다.",
        "ChangeHistory": "항목의 감사로 체크된 항목 대상으로, 필드의 데이터 변경 이력을 확인할 수 있습니다.",
        "ReportOutput": "화면을 스냅샷 형태로 pdf 파일로 추출이 가능합니다."
      },
      "FileAttachment": "파일 첨부",
      "ControlFunction": {
        "Description": "워크플로우 유형의 폼이 아닐 경우에 한하여, 제어 기능을 통해 버튼을 생성하며 우측 상단에 버튼이 나타납니다."
      },
      "AtomList": {
        "String": {
          "Text": {
            "Description": "텍스트 유형의 문자열을 입력하는 Atom 입니다.",
            "DataType": ["Text(100)", "Text(512)", "Text(4000)", "Object ID", "Name", "Entity Reference", "Json"],
            "Settings": "예제: 입력할 텍스트를 영문으로 설정, 글자수는 50글자로 제한"
          },
          "TextArea": {
            "Description": "여러 줄의 문자열을 입력하는 형태의 Atom 입니다.",
            "DataType": ["Text(100)", "Text(512)", "Text(4000)", "Text(CLOB)"],
            "Settings": "예제: 텍스트 영역 10라인, 글자수는 50글자로 제한"
          },
          "Phone": {
            "Description": "휴대폰 번호를 입력하는 Atom 입니다.",
            "DataType": ["Text(100)"],
            "Settings": "예제: 번호 포맷 3번으로 설정하여, (\"010\", \"011\", \"016\", \"017\", \"018\", \"019\", \"070\") 선택 가능"
          },
          "Password": {
            "Description": "입력 값이 표시되지 않고, 비밀번호 유형의 문자열을 입력하는 Atom 입니다.",
            "DataType": ["Text(100)", "Password"],
            "Settings": "예제: 글자수는 50글자로 제한"
          },
          "CodeMultiSelect": {
            "Description": "코드 유형에 속해 있는 두 개 이상의 코드들을 체크박스로 보여주는 Atom 입니다.",
            "DataType": ["Text(100)", "Text(4000)", "Code"],
            "Settings": "예제1: 전체 선택 체크박스 및 화면 로딩 시 전체 체크박스 선택 처리"
          },
          "SqlMultiSelect": {
            "Description": "SQL로 여러 개의 체크박스 선택지를 만들어 선택 값을 다중 선택할 수 있는 Atom 입니다.",
            "DataType": ["Text(100)", "Text(512)", "Text(4000)"],
            "Settings": "예제1: 전체 선택 체크박스 및 화면 로딩 시 전체 체크박스 선택 처리"
          },
          "UserAgent": {
            "Description": "사용자 에이전트 정보를 보여주는 Atom 입니다.",
            "DataType": ["Text(512)"],
            "Settings": "예제: SQL을 통해 선택된 값 중 필드의 text 값을 가져와서 작업 그룹 정보를 검색"
          },
          "SqlEditor": {
            "Description": "SQL 편집 툴 Atom 입니다.",
            "DataType": ["Text(100)", "Text(512)", "Text(4000)", "Text(CLOB)"]
          },
          "JsonEditor": {
            "Description": "JSON 편집 툴 Atom 입니다.",
            "DataType": ["Text(512)", "Text(4000)", "Text(CLOB)"]
          },
          "EmpID": {
            "Description": "사용자의 계정을 폼 저장할 때 중복이 있는지 확인해주는 Atom 입니다.",
            "DataType": ["Text(512)", "Object ID"]
          },
          "Autocomplete": {
            "Description": "자동완성 모듈을 사용한 문자열 검색 Atom 입니다.",
            "DataType": ["Text(512)", "Text(4000)"],
            "Settings": "예제: 로그인 한 계정 정보가 기본값으로 화면 디스플레이 되고 직원 정보를 검색"
          },
          "Address": {
            "Description": "s9s 주소검색 모듈을 사용한 주소 검색 Atom 입니다.",
            "DataType": ["Text(512)", "Text(4000)"],
            "Settings": "예제: 기본값으로 #{session.user.emp_id}"
          },
          "Signature": {
            "Description": "폼 필드에 하나의 사인을 할 수 있는 UI를 제공하는 Atom 입니다.",
            "DataType": ["Text(4000)", "Text(CLOB)"]
          },
          "QRCode": {
            "Description": "QR코드를 생성할 수 있는 Atom 입니다.",
            "DataType": ["Text(4000)", "Text(CLOB)"],
            "Settings": "예제: QR코드 Clip report 모듈과 연동하여 출력"
          },
          "MultiCheckBox": {
            "Description": "SQL로 여러 개의 체크박스 선택지를 만들어 선택 값을 다중 선택할 수 있는 Atom 입니다.",
            "DataType": ["Text(4000)"],
            "Settings": "예제: 선택지가 3개, 기본값 전체 체크한 멀티 체크박스"
          },
          "Format": {
            "Description": "Format 형식을 지정하여 사용할 수 있는 Atom",
            "DataType": ["Text(4000)", "Text(CLOB)"],
            "Settings": "예제: SQL Format 형식 모드"
          },
          "MDEditor": {
            "Description": "메타데이터 편집 툴 Atom 입니다.",
            "DataType": ["Text(CLOB)"]
          },
          "jqxEditor": {
            "Description": "HTML 텍스트 영역을 대체할 수 있는 즉시 사용 가능한 HTML 텍스트 편집 툴 Atom 입니다.",
            "DataType": ["Text(CLOB)"]
          },
          "CKEditor": {
            "Description": "모듈식 아키텍처를 갖춘 최신 JavaScript 서식 있는 텍스트 편집 툴 Atom 입니다.",
            "DataType": ["Text(CLOB)"]
          }
        },
        "Number": {
          "Percent": {
            "Description": "숫자를 입력하는 퍼센트 UI를 가진 Atom 입니다.",
            "DataType": ["Number", "Percent"]
          },
          "Integer": {
            "Description": "숫자를 입력하는 Atom 입니다.",
            "DataType": ["Text(4000)", "Number", "Duration"]
          },
          "HM": {
            "Description": "시간/분을 입력하는 Atom 입니다.",
            "DataType": ["Number"]
          },
          "Currency": {
            "Description": "3자리마다 콤마를 찍어주며 숫자를 입력하는 Atom 입니다.",
            "DataType": ["Number", "Currency"]
          },
          "FP": {
            "Description": "트랜잭션, 데이터, 총 FP를 입력하는 Atom 입니다.",
            "DataType": ["Number"]
          },
          "Goal": {
            "Description": "SLM 지표관리에서 사용하는 목표, 기본, 최저, 가중치를 입력할 수 있는 Atom 입니다.",
            "DataType": ["Number"]
          }
        },
        "Boolean": {
          "Select": {
            "Description": "Select box 입력 형태의 Atom 입니다.",
            "DataType": ["Boolean"],
            "Settings": "예제: value값에 따른 label 지정"
          },
          "Radio": {
            "Description": "라디오 형태의 Atom 입니다.",
            "DataType": ["Text(CLOB)", "Gender", "Boolean"],
            "Settings": "예제: value값에 따른 label 지정"
          },
          "IndInit": {
            "Description": "SLM 지표관리에서 수집 데이터를 초기화할 때 사용하는 Atom 입니다.",
            "DataType": ["Boolean"]
          },
          "Checkbox": {
            "Description": "체크박스 형태로 0(false), 1(true) 값으로 체크박스 선택에 따라 저장되는 Atom 입니다.",
            "DataType": ["Boolean"],
            "Settings": "예제: label 지정"
          }
        },
        "Entity": {
          "Select": {
            "Description": "SQL에 저장된 목록을 조회하여 Select box 입력 형태의 Atom 입니다.",
            "DataType": ["Text(512)", "Text(4000)", "Entity Reference"],
            "Settings": "예제: 직원정보 조회 및 특정 컬럼에 값을 전달(로그인 유저ID)"
          },
          "Tree": {
            "Description": "Entity 정보로 데이터를 구성한 Tree 구조의 Select box 입력 형태의 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 관리자를 Select box 선택 조건에서 보이지 않도록 제한"
          },
          "Step": {
            "Description": "SQL 결과 값에 따른 계층형 구조를 지원하는 Select Box 입력 형태의 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 부서 정보를 계층형 구조로 나타내기"
          },
          "Radio": {
            "Description": "SQL을 이용한 라디오 필드를 생성하여 보여주는 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 현재 접속한 사람 라디오 필드에 표시"
          },
          "Multi": {
            "Description": "리스트 및 SQL을 통해 검색 팝업창을 띄어 다중으로 선택할 수 있는 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 멀티로 구성을 선택할 수 있는 팝업 목록이 뜨고, 구성관리 상세 조회 폼 화면을 보여준다."
          },
          "MPP": {
            "Description": "Parent-Child 구조를 지원하며 두 개 이상의 필드를 이용하여 저장된 코드정보를 가져와 상위/하위코드를 보여주는 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 필드 2를 이용하여 코드 하위 정보 선택하기"
          },
          "ListSearch": {
            "Description": "저장된 데이터를 목록으로 불러와 선택 값을 저장하는 Atom 입니다.",
            "DataType": ["Text(100)", "Text(512)", "Text(4000)", "Entity Reference"],
            "Settings": "예제: 직원정보 조회 및 선택"
          },
          "Entity": {
            "Description": "워크플로우를 제외한 Entity 기준 라벨 표시용 Atom 입니다.",
            "DataType": ["Entity Reference"]
          },
          "Employee": {
            "Description": "사용자가 직원을 목록에서 선택 및 문자열을 입력할 수 있는 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 현재 로그인 사용자를 기본값으로 지정"
          },
          "Dept": {
            "Description": "사용자가 부서를 목록에서 선택 및 문자열을 입력할 수 있는 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 현재 로그인 사용자 부서를 기본값으로 지정"
          },
          "CM": {
            "Description": "구성(자산)관리 정보로 데이터를 구성하고 돋보기 버튼을 클릭하여 데이터를 선택할 수 있는 문자열 입력 형태의 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 구성(자산)관리 범주(cm_cat_cd) APP 설정"
          },
          "CMSystem": {
            "Description": "시스템 정보로 데이터를 구성하고 자동 완성 모듈 및 돋보기 버튼을 클릭하여 데이터를 선택할 수 있는 문자열 입력 형태의 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 자동완성 모듈을 사용한 구성(자산)관리 조회"
          },
          "CM.Step": {
            "Description": "구성(자산) 정보로 데이터에 따른 계층형 구조를 지원하는 Select Box 입력 형태의 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 업무시스템(SYS,APP,SUBAPP) 세 가지 범주 나오고, 연결할 폼 tas_id 및 frm_id 설정"
          },
          "CM.Multi": {
            "Description": "기본값이 없는 경우 필드 ID 들어가도록 리스트를 통해 검색 팝업창을 띄어 다중으로 선택할 수 있는 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 선택된 구성항목 조회 시 해당 폼 ID 및 검색 팝업창 닫지 않도록 설정"
          },
          "Entity.Autocomplete": {
            "Description": "자동완성 모듈을 사용한 Entity 검색 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 자동완성 모듈을 사용한 직원 검색"
          },
          "Entity.Multi.Autocomplete": {
            "Description": "자동완성 모듈을 사용한 다중 Entity 검색 Atom 입니다.",
            "DataType": ["Entity Reference"],
            "Settings": "예제: 자동완성 모듈을 사용한 구성(자산)관리 다중 조회 및 선택"
          }
        },
        "Code": {
          "Radio": {
            "Description": "Code 정보로 데이터를 구성한 라디오 형태의 Atom 입니다.",
            "DataType": ["Code"],
            "Settings": "예제: 두 개의 코드(APP, PC)만 나오게 설정 및 첫 번째 코드(APP) 선택 처리"
          },
          "Select": {
            "Description": "Code 정보로 데이터를 구성한 Select box 입력 형태의 Atom 입니다.",
            "DataType": ["Code"],
            "Settings": "예제: 두 개의 코드(APP, PC)만 나오게 설정 및 첫 번째 코드(APP) 선택 처리"
          },
          "SearchSelect": {
            "Description": "Code 정보를 계층형 구조로 지원하는 검색 입력 형태의 Atom 입니다.",
            "DataType": ["Code"],
            "Settings": "예제: 두 개의 상위 코드(SYS, HW)만 나오게 설정 및 첫 번째 코드(APP) 선택 처리"
          },
          "Step": {
            "Description": "Code 정보를 Step 구조로 선택하는 Select Box 입력 형태의 Atom 입니다.",
            "DataType": ["Code"],
            "Settings": "예제: 첫 번째 상위 코드(SYS) 선택 처리"
          },
          "Step.Adv": {
            "Description": "코드 정보를 다양한 형태의 계층형 코드 선택할 수 있는 Atom 입니다.",
            "DataType": ["Code"],
            "Settings": "예제: uitype 설정을 통한 다양한 형태의 계층형 코드 선택"
          },
          "Tree": {
            "Description": "Code 정보로 데이터를 구성한 Tree 구조의 Select box 입력 형태의 Atom 입니다.",
            "DataType": ["Code"],
            "Settings": "예제: 계층 구조의 코드 생성 및 설정"
          },
          "Autocomplete": {
            "Description": "자동완성 모듈을 사용한 코드 검색 Atom 입니다.",
            "DataType": ["Code"],
            "Settings": "예제: 자동완성 모듈을 사용한 코드 검색"
          }
        },
        "Json": {
          "Point2": {
            "Description": "SLM 등급기준을 입력할 수 있는 Atom 입니다.",
            "DataType": ["Json"]
          },
          "Point2.Convert": {
            "Description": "SLM 등급 실적 및 환산점수를 입력할 수 있는 Atom 입니다.",
            "DataType": ["Json"]
          },
          "Indicator.Formula2": {
            "Description": "SLM 측정공식을 설정할 수 있는 Atom 입니다.",
            "DataType": ["Json"]
          },
          "DipConfig": {
            "Description": "DataAdapter에서 연동정보를 설정할 수 있는 Atom 입니다.",
            "DataType": ["Json"]
          },
          "AutoAssign": {
            "Description": "프로세스 진행 중의 담당자를 기 설정된 조건에 따라 자동 변경될 수 있도록 Auto Assign에서 사용하는 Atom 입니다.",
            "DataType": ["Json"]
          },
          "Attrib": {
            "Description": "SLM 지표관리 부가설정에서 사용하는 화면에 표시할 컬럼을 설정할 수 있는 Atom 입니다.",
            "DataType": ["Json"]
          }
        },
        "Custom": {
          "Relation": {
            "Description": "릴레이션 유형을 설정하는 Atom 입니다.",
            "DataType": ["Custom"],
            "Settings": "예제: 릴레이션 항목 추가 및 삭제 기능 설정"
          },
          "Template": {
            "Description": "기본 Form UI가 아닌, 디자인 요소가 들어가있는 폼 UI, 또는 HTML 요소가 들어간 UI를 보여주고자 할 때 사용하는 Atom 입니다.",
            "DataType": ["Custom"],
            "Settings": "예제: HTML 템플릿 소스 이름 설정"
          }
        }
      }
    }
  }
}
