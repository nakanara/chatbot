{
  "title": "Entity Wizard",
  "type": "Document",
  "content": {
    "SQL매니저가이드": {
      "소개": {
        "목적": "데이터를 조회(select)하거나 변형(insert/update/delete)할 때 SQL을 사용합니다.",
        "설명": "SQL 매니저를 통해 SQL을 조회와 등록/수정/삭제 유형으로 나누어 쿼리 작성과 조건문/파라미터 설정을 보다 편리하게 할 수 있으며, 작성한 쿼리를 실행하여 오류 확인도 가능합니다."
      },
      "가이드라인": {
        "접근방법": "‘SQL 관리’ 메뉴에서 오른쪽 상단 추가 버튼을 클릭하여 SQL을 추가할 수 있으며, 리스트에 있는 ID를 클릭하여 SQL을 수정할 수 있습니다.",
        "사용목적": "데이터를 조회하거나 변형해야 할 경우 SQL을 사용하며, SQL에는 쿼리뿐만 아니라 JSON 형태의 조건문/파라미터 설정이 필요합니다. SQL 매니저를 사용하면 JSON 형태의 설정을 직접 작성하지 않아도 되며, 작성한 쿼리의 오류 여부를 체크할 수 있습니다.",
        "사전지식": "SQL 매니저를 사용하기 전에는 기본적인 쿼리 작성에 대한 지식이 필요합니다."
      },
      "SQL생성": {
        "공통속성": {
          "SQL고유아이디": "",
          "SQL이름": "",
          "SQL사용여부": "",
          "JNDIName": "서버 설정 시 EGENE 솔루션 DB 외에 추가로 JNDI 설정이 있다면 JNDI Name을 작성하여 해당 DB에서 쿼리를 수행할 수 있도록 하는 기능입니다. (입력 후 접속 여부 확인 가능)",
          "SQL설명": ""
        },
        "SelectSQL생성": {
          "설명": "데이터를 조회하거나 검색하기 위한 쿼리를 작성할 때 사용합니다.",
          "속성": {
            "SQL": "데이터 조회, 검색하는 select 문 쿼리를 작성합니다. 조건으로 #{변수명}과 같이 입력할 수 있고, 변수명과 조건문 설정의 ID를 연결하여 조건문 쿼리를 설정할 수 있습니다.",
            "조건": {
              "조건ID": "SQL 쿼리에 작성한 #{변수명}의 변수명과 조건 ID가 동일해야 합니다.",
              "WHERE사용여부": "해당 조건이 where 절을 사용한다면 사용 여부에 체크합니다. (체크: where 사용, 체크 X: and 사용)",
              "조건항목": {
                "유형": "'직접입력' 또는 '연산자'를 선택합니다.",
                "컬럼명": "'직접입력' 유형 선택 시 sql 쿼리를 직접 입력합니다. '연산자' 유형 선택 시 컬럼명을 선택합니다.",
                "매핑변수": "컬럼명과 매핑되는 파라미터 변수이며 %를 사용할 수 있고, 여러 개를 콤마(,)로 입력할 수 있습니다.",
                "필수체크": "해당 조건 항목이 필수로 쿼리에 포함되어야 할 경우 체크합니다."
              }
            },
            "SQL미리보기": "설정한 조건문을 토대로 'SQL 미리보기'에 동일하게 변수 입력 테이블이 생성됩니다. 변수 입력 테이블에서 값을 입력 후 'SQL 실행' 버튼을 누르면 해당 결과를 미리 볼 수 있습니다."
          }
        },
        "InsertUpdateDeleteSQL생성": {
          "설명": "데이터를 변형하는 종류의 쿼리를 작성할 때 사용합니다.",
          "속성": {
            "SQL": "데이터에 변형을 가하는 insert/update/delete 문 쿼리를 작성합니다. 파라미터 값을 넘겨줄 부분을 ?로 입력해야 하며, ?의 개수에 따라 파라미터 설정을 할 수 있습니다. #{변수명}은 필요한 경우 입력 가능하며, 파라미터 설정은 따로 하지 않고 소스 부분에서 해당 변수명으로 값을 넘겨줄 수 있습니다.",
            "파라미터": {
              "변수값": "파라미터 value를 넘겨받기 위한 key에서 사용하는 변수 명을 입력해야 하며, 대부분 컬럼명을 사용하고 있습니다.",
              "예약어": "'현재일시', '로그인 사용자', '로그인 사용자 부서', '로그인 사용자 회사', '유니크 아이디' 중 하나를 선택하여 사용할 수 있습니다."
            },
            "SQL미리보기": "설정한 파라미터를 토대로 'SQL 미리보기'에 동일하게 변수 입력 테이블이 생성됩니다. 변수 입력 테이블에서 값을 입력 후 'SQL 실행' 버튼을 누르면 해당 결과를 미리 볼 수 있습니다."
          }
        }
      },
      "SQL활용": {
        "폼": {
          "설명": "폼에서 ‘Sql.Select’ 아톰과 같이 SQL을 사용하는 아톰이 있습니다.",
          "예시설정": {
            "sql_id": "SQL_ID",
            "sql_args": [{"col": "key", "value": "value"}]
          },
          "예시": {
            "값을고정시킬때": {
              "sql_id": "SQL_TMPT_005",
              "sql_args": [{"col": "emp_id", "value": "admin"}]
            },
            "특정값을전달할때": {
              "sql_id": "SQL_TMPT_005",
              "sql_args": [{"col": "emp_id", "value": "#{session.user.emp_id}"}]
            }
          }
        },
        "리스트": {
          "설명": "리스트 검색 조건에서 ‘Sql.Select’ 아톰과 같이 SQL을 사용하는 아톰이 있습니다.",
          "예시설정": {
            "SQL_ID": "",
            "args": [{"col": "key", "value": "value"}]
          },
          "예시": {
            "쿼리와조건설정후": {
              "SQL_ID":"COND_SQL_TMPT_009",
              "args": [{"col": "cm_cat_cd", "value": "SYS"}]
            }
          }
        },
        "릴레이션": {
          "설명": "릴레이션에서 ‘Sql.Select’ 아톰과 같이 SQL을 사용하는 아톰이 있습니다.",
          "예시설정": {
            "sql_id": "SQL_ID",
            "params": {"key": "value"}
          },
          "예시": {
            "쿼리와조건설정후": {
              "sql_id": "RLT.SQL_TMPT_006",
              "params": {"key": "2"}
            }
          }
        },
        "소스": {
          "JavaScript": {
            "설명": "자바스크립트에서는 비동기 방식인 AJAX를 이용하여 SQL을 사용할 수 있습니다.",
            "API유형": {
              "조회유형": "/sql/{id:.+} API 사용",
              "등록/수정/삭제유형": "/sql/exec/{id:.+} API 사용"
            },
            "예시": {
              "조회유형": {
                "url": "/api/egene/sql/SQL_ID",
                "data": {"key": "value"}
              },
              "등록/수정/삭제유형": {
                "url": "/api/egene/sql/exec/SQL_ID",
                "type": "POST",
                "data": {"key": "value"}
              }
            }
          },
          "JAVA": {
            "설명": "자바에서 유형별로 사용하는 소스는 아래와 같습니다.",
            "조회유형": {
              "조건문만있을때": [
                "Sqls sqls = ice.sqls();",
                "Data d = new Data();",
                "d.put(key, value);",
                "Result r = sqls.getResult(SQL_ID, d);",
                "RecordSet rs = r.getRecordSet();"
              ],
              "조건문과변수명있을때": [
                "Sqls sqls = ice.sqls();",
                "HashMap vars = new HashMap();",
                "vars.put('변수명', value);",
                "Data d = new Data();",
                "d.put(key, value);",
                "Result r = sqls.getResult(SQL_ID, vars, d);",
                "RecordSet rs = r.getRecordSet();"
              ]
            },
            "등록/수정/삭제유형": {
              "변수명없을때": [
                "Sqls sqls = ice.sqls();",
                "String sql_id = 'SQL_ID';",
                "Data d = new Data();",
                "d.put(key, value);",
                "TrxResult tr = sqls.executeArray(con, sql_id, d);"
              ],
              "변수명있을때": [
                "Sqls sqls = ice.sqls();",
                "String sql_id = 'SQL_ID';",
                "HashMap vars = new HashMap();",
                "vars.put('변수명', value);",
                "Data d = new Data();",
                "d.put(key, value);",
                "TrxResult tr = sqls.executeArray(con, sql_id, vars, d);"
            ]
          }
        }
      },
      "SQL로그": {
        "설명": "SQL 로그는 SQL에 설정한 파라미터 값으로 넘겨 받아 오류 없이 정상적으로 동작했는지 확인할 수 있습니다.",
        "단계": {
          "1단계": "오른쪽 상단에 있는 Setting – Web Log 클릭",
          "2단계": "‘SQL Log’ 클릭 후 SQL 사용하는 작업 실행 -> 로그 결과 확인",
          "3단계": "로그를 멈추고 싶을 때 ‘중지’ 버튼 클릭",
          "4단계": "로그를 다시 실행하려면 ‘현재 위치부터 시작’ 버튼 클릭"
        }
      },
      "함수": {
        "MariaDB": {
          "FM_LDT": "8자리의 날짜 문자를 포맷화할 수 있습니다.",
          "FM_LDTTM": "14자리의 날짜 문자를 포맷화할 수 있습니다.",
          "GETCODE_FULLPATH_NAME": "코드 테이블의 데이터 기반으로 계층형일 경우 하나의 코드명으로 표기할 수 있습니다."
        }
      }
    }
  }
}
}